%% Analysis of sliding door experiments
% This code was originally generated by H. Chiu and modified by C.E.
% Schretter for use with data reprocessed using the FlyDisco pipeline

% This code was used for the same genotype analysis in Figure 2

% Inputs are scores files generated using the classifier detailed
% in Chiu et al. 2025. 

% All videos were tracked using the Caltech FlyTracker and 
% subsequently manually fixed using FixErrors
% http://ctrax.sourceforge.net/fixerrors.html. 
% 
% Updated perframe features
% were generated using the FlyDisco Pipeline: https://github.com/kristinbranson/FlyDiscoAnalysis.

%% generate actions from scores
% this is for loading into Caltech FlyTracker Visualizer

clear all 
clear Cache
addpath /Users/schretterc/Documents/GitHub/JAABA/perframe
addpath /Volumes/KS_HCData/
MainDir = uigetdir(pwd, 'Select a Folder');
FileList = dir(fullfile(MainDir,'*/movie.mp4'));
cd ([MainDir])

for j= 1:length(FileList)

    % enter each folder 
    Folder = FileList(j).folder(1:end);

    % creat a list of scores files (sturcture)
    ScoreList(1).name = 'scores_headbutt2_HC.mat';

    assign fly1/fly2 scores of each behavior to the action file
    for i =1:length(ScoreList)
        cd([Folder])
        load(ScoreList(i).name);

        fly1_t0s = allScores.t0s{1,1}'; %start frame of behavioral bouts
        fly1_t1s = allScores.t1s{1,1}'; %end frame of behavioral bouts
        fly2_t0s = allScores.t0s{1,2}';
        fly2_t1s = allScores.t1s{1,2}';

        behs(1,i) = {behaviorName};
        bouts{1,i} = [fly1_t0s fly1_t1s 2*ones(length(fly1_t0s),1)];
        bouts{2,i}=[fly2_t0s fly2_t1s 2*ones(length(fly2_t0s),1)];

    end

    save action file to the same layer as the movie file
    cd([MainDir])
    ActionName = [Folder '-actions.mat'];
    save(ActionName, 'behs', 'bouts')
    
end

% DestinationFolder = '/Volumes/KS_HCData/';
% FullFile = dir(fullfile(pwd, '*-actions.mat'));
% for file=1:length(FullFile)
% movefile(FullFile(file).name, DestinationFolder)
% end
% 
% cd(DestinationFolder)

%% Analysis

ActionList = dir([pwd '/' '*-actions.mat']);
MetaData = cell(length(ActionList),1);

    for f=1:length(ActionList)
        load(ActionList(f).name)
        % fill null
        for fly=1:2
            for behavior=1:length(bouts)
                if isempty(bouts{fly, behavior})
                    bouts{fly, behavior}(1,1) = 0;
                    bouts{fly, behavior}(1,2) = 0;
                end
            end
        end
        
        cbouts = {};
        % concate data
        for c=1:length(bouts)
            cbouts{1,c}(:,1) = [bouts{1,c}(:,1); bouts{2,c}(:,1)];
            cbouts{1,c}(:,2) = [bouts{1,c}(:,2); bouts{2,c}(:,2)];    
        end
%      
    MetaData{f,1} = ActionList(f).name(1:end);
    % headbutt - associate this with where the location of each of behavior
    % in the action file 
    % behav - seq of the behavior; its in one column; but frame rate is in
    % rows; 
    % headbutting
    MetaData{f,2} = cbouts{1,1}(:,1);
    MetaData{f,2} = MetaData{f,2}(MetaData{f,2}>0);
    MetaData{f,3} = [cbouts{1,1}(:,2)- cbouts{1,1}(:,1)]; % duration
    MetaData{f,3} = MetaData{f,3}(MetaData{f,3}>0);
    
    end
%  
save('MetaData2.mat', 'MetaData') 
% save('MetaData.mat', 'MetaData', 'ActionList')   

%% raster

% parameters
npairs=length(ActionList);
Framerate =30;
Time = 10*60*Framerate;

% color settings
 LED_color = [224/255 224/255 224/255]; % grey LED stimulation
 color_P1 = [239/255 86/255 117/255]; % #ef5675 pink headbutt
 color_B1 = [0/255 0/255 153/255];
 color_G1 = [0/255 128/255 0/255]; 
 
subplot(4,1,4)

    % plotting photostimulation period   
    rectangle('Position',[(0-10-600-30)*30 .5 30*30 npairs+1],'FaceColor', LED_color,...
            'EdgeColor', 'none');
    hold on

    % Door open
    x= [0, 0];
    y= [.5, npairs+1.5];
    plot(x, y , '--', 'LineWidth', 1, 'Color', color_B1)
    hold on 

    % windows
    for t=1:10
    x= [t*60*Framerate, t*60*Framerate];
    y= [.5, npairs+1.5];
    plot(x, y , '--', 'LineWidth', 1, 'Color', color_S1)
    hold on 
    end

    % headbutt 
    catTime = [];
    catDuration = [];
    catNumber = [];

    for g= 1:npairs
        catTime = vertcat(catTime, MetaData{g, 2});   % start 
        catDuration = vertcat(catDuration, MetaData{g, 3}); % duration 
        catNumber = vertcat(catNumber, g*ones(length(MetaData{g, 2}), 1)); % order                                             
    end
    for i=1:length(catNumber)
        rectangle('Position', [catTime(i) catNumber(i) ...         
            catDuration(i) 1], 'FaceColor', color_P1, ...
            'EdgeColor', color_P1); 
    end
 
    hold on
%     
    % figure settings
    ax = gca;
    ax.Box = 'off';
    ax.LineWidth = 1;
    ax.XLim = [(-300)-((30+30+600+10)*Framerate) 10*60*Framerate];
    ax.XTick = (-(30+30+600+10)*Framerate) : 10*Framerate : 10*60*Framerate;
    ax.TickLength = [0.003 0.003];
    ax.XTickLabel = {'0','','','','','','1', '','', '','', '',...
                     '2','','','','','','3', '','', '','', '',...
                     '4','','','','','','5', '','', '','', '','','6',...
                     '', '','','','','7', '', '','','','','8',...
                     '', '','','','','9', '', '','','','','10',...
                     '', '','','','','11', '', '','','','','12',...
                     '', '','','','','13', '', '','','','','14',...
                     '', '','','','','15', '', '','','','','16',...
                     '', '','','','','17', '', '','','','','18',...
                     '', '','','','','19', '', '','','','','20',...
                     '', '','','','','21'};
    ax.XLabel.String = 'Time(Min)';
    ax.YLim = [-.1 npairs+2];
    ax.YTick = [1 npairs];
    ax.YTickLabel = [];
    ax.YLabel.String = ['Genotype'];

